<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.student.mapper.StudentMapper">

    <resultMap type="Student" id="StudentResult">
        <result property="studentId"    column="student_id"    />
        <result property="name"    column="name"    />
        <result property="account"    column="account"    />
        <result property="password"    column="password"    />
        <result property="email"    column="email"    />
        <result property="phoneNumber"    column="phone_number"    />
        <result property="school"    column="school"    />
        <result property="sex"    column="sex"    />
        <result property="status"    column="status"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="avatar"    column="avatar"    />
        <result property="role"    column="role"    />
    </resultMap>

    <sql id="selectStudentVo">
        select student_id, name, account, password, email, phone_number, school, sex, status, del_flag, create_by, create_time, update_by, update_time, avatar, role from student
    </sql>

    <select id="selectStudentList" parameterType="Student" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        <where>
            <if test="studentId != null "> and student_id = #{studentId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="school != null  and school != ''"> and school = #{school}</if>
        </where>
    </select>

    <select id="selectStudentByStudentId" parameterType="Long" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        where student_id = #{studentId}
    </select>

    <select id="checkStudentAccountExistence" parameterType="Student" resultType="int">
        SELECT COUNT(*) FROM student
        WHERE account = #{account}
    </select>

    <select id="checkStudentEmailExistence" parameterType="Student" resultType="int">
        SELECT COUNT(*) FROM student
        WHERE email = #{email}
    </select>

    <select id="checkStudentPhoneExistence" parameterType="Student" resultType="int">
        SELECT COUNT(*) FROM student
        WHERE phone_number = #{phoneNumber}
    </select>

    <select id="checkStudentAccountExistence1" parameterType="Student" resultType="int">
        SELECT COUNT(*) FROM student
        WHERE account = #{account} AND student_id != #{studentId}
    </select>

    <select id="checkStudentEmailExistence1" parameterType="Student" resultType="int">
        SELECT COUNT(*) FROM student
        WHERE email = #{email} AND student_id != #{studentId}
    </select>

    <select id="checkStudentPhoneExistence1" parameterType="Student" resultType="int">
        SELECT COUNT(*) FROM student
        WHERE phone_number = #{phoneNumber} AND student_id != #{studentId}
    </select>

    <insert id="insertStudent" parameterType="Student" useGeneratedKeys="true" keyProperty="studentId">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="account != null and account != ''">account,</if>
            <if test="password != null and password != ''">password,</if>
            <if test="email != null">email,</if>
            <if test="phoneNumber != null">phone_number,</if>
            <if test="school != null">school,</if>
            <if test="sex != null">sex,</if>
            <if test="status != null">status,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="avatar != null">avatar,</if>
            <if test="role != null">role,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="account != null and account != ''">#{account},</if>
            <if test="password != null and password != ''">#{password},</if>
            <if test="email != null">#{email},</if>
            <if test="phoneNumber != null">#{phoneNumber},</if>
            <if test="school != null">#{school},</if>
            <if test="sex != null">#{sex},</if>
            <if test="status != null">#{status},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="avatar != null">#{avatar},</if>
            <if test="role != null">#{role},</if>
         </trim>
    </insert>

    <update id="updateStudent" parameterType="Student">
        update student
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="account != null and account != ''">account = #{account},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phoneNumber != null">phone_number = #{phoneNumber},</if>
            <if test="school != null">school = #{school},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="status != null">status = #{status},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="role != null">role = #{role},</if>
        </trim>
        where student_id = #{studentId}
    </update>

    <delete id="deleteStudentByStudentId" parameterType="Long">
        delete from student where student_id = #{studentId}
    </delete>

    <delete id="deleteStudentByStudentIds" parameterType="String">
        delete from student where student_id in
        <foreach item="studentId" collection="array" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </delete>
</mapper>
